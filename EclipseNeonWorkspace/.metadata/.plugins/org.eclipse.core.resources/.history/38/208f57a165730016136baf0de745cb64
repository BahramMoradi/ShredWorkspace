package com.netcompany.dataextractor;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Iterator;
import java.util.stream.Stream;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVRecord;

public class ParserUtil {
	public enum headers{
		CPR,STATUS,OPRETTET,BREVE,ANDRE_COLUMN,ANDRE_COLUMN_VEARDI
	}
	public static void main(String[] args) throws IOException {
	ParserUtil parser=new ParserUtil();
	parser.parse();
	//parser.parseFTM();
	//String str="BREV2007.FTM";
	//System.out.println(str.replace(".FTM", ".txt"));

	
	

	}



	static char A_SEP='@';
	static char C_SEP=';';
	static char COMA_SEP=',';
	static String BASE_FOLDER="C:\\Users\\BAM\\Desktop\\files\\";
	static String FTM_FOLDER=BASE_FOLDER+"breve";
	static String BREVE_TXT=BASE_FOLDER+"breve.txt";
	static String RESULT_FOLDER=BASE_FOLDER+"result\\";
	/*
	public  void parse() throws IOException{				
		Reader in=new FileReader(folder+breve);
		Iterable<CSVRecord> records=CSVFormat.newFormat(A_SEP).withHeader(headers.class).parse(in);
		records.forEach(record->{
			String cpr=record.get(headers.CPR);
			String breve_FMT=record.get(headers.BREVE);
			String andre_column=record.get(headers.ANDRE_COLUMN);
			String andre_coulmn_value=record.get(headers.ANDRE_COLUMN_VEARDI);
			//String[] values=andre_coulmn_value.split(";");
			
			
			try {
				parseFTM(cpr, breve_FMT,getStartIndex(andre_coulmn_value) );
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		});
	}
	**/
	/**
	public void parseFTM(String cpr,String breve,int startindex) throws IOException{
		String brevFolder=folder+"breve\\";
		String textBreve=breve.replace(".ftm", ".txt");
		
		System.out.println("============================================================");
		System.out.println(cpr+"\t"+textBreve);
		
		Stream<String> lines= Files.lines(Paths.get( brevFolder+textBreve));
		lines.forEach(line->{
			String cpr_i_breve=line.substring(startindex, startindex+11);
			if(cpr.equals(cpr_i_breve)){
				System.out.println(cpr_i_breve);
				System.out.println("=============================================================");
			}
		});
				
	} */
	
	
	
	public void parse() throws IOException{
		// list all files in breve folder .FTM
		
		File all = new File(FTM_FOLDER);
		File [] files=all.listFiles();
		
	
	
		// parse brev.txt
		Reader in=new FileReader(BREVE_TXT);
		Iterable<CSVRecord> breveTxtrecords=CSVFormat.newFormat(A_SEP).withHeader(headers.class).parse(in);
		
		
		for(File file: files){
			// for hver BREVXXX.FTM create a result file
			String resultFile=RESULT_FOLDER+file.getName().replace("BREV", "RESULT");
			File res=new File(resultFile);
			if(!res.exists()){
				res.createNewFile();
			}
			
			 checkFTM(file, breveTxtrecords);
			
			
		}
	} 
	
	public void checkFTM(File breveFTM,Iterable<CSVRecord> records) throws IOException{
		int startIndex=8+43+34+34+34+34+34+8;
		Stream<String> lines= Files.lines(Paths.get(breveFTM.getAbsolutePath()));  //read FTM file
		Iterator<String> itr=lines.iterator();
		
		while(itr.hasNext()){
			String line=itr.next();
			String ftmCPR=line.substring(startIndex, startIndex+11);
			if(!existsInBreveTxt(ftmCPR,records)){
				//print(breveFTM.getName(),ftmCPR);
				writeToResultFile(, ftmCPR);
				
			}
			
		}
		
		
	}
	public boolean existsInBreveTxt(String ftmCPR,Iterable<CSVRecord> records){
		boolean exsits=false;
		
		for(CSVRecord record: records){
			String brevTxtCPR=record.get(headers.CPR);
			if(brevTxtCPR.trim().equals(ftmCPR.trim())){
				exsits=true;
				break;
			}
		}
		
		
		return exsits;
	}
	
	public void writeToResultFile(String filePath, String what) throws IOException{
		PrintWriter pw = new PrintWriter(new FileWriter(filePath));
		pw.append(what);
		pw.close();
	
	}
	public void print(String ftmfile,String cpr){
		System.out.println("================================================================");
		System.out.println(ftmfile);
		System.out.println("CPR: "+cpr);
	}
	
	
	/*
	
	public int getStartIndex(String valueColumn){
		int index=0;
		String [] strValues=valueColumn.split(";");
		for(int i=0;i<8;i++){
			index+=Integer.valueOf(strValues[i]);
		}
		
		return index;
	}
	*/
	

}
